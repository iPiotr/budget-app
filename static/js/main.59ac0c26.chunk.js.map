{"version":3,"sources":["config/Fire.js","components/Forms/Login.js","components/Forms/Register.js","components/Tracker/Transaction/Transaction.js","components/Tracker/Tracker.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","state","email","password","fireErrors","login","e","preventDefault","auth","signInWithEmailAndPassword","catch","error","setState","message","handleChange","target","name","value","errorNotification","this","className","class","type","placeholder","onChange","onClick","Component","Register","displayName","register","createUserWithEmailAndPassword","then","user","currentUser","updateProfile","Transaction","props","id","price","Tracker","transactions","money","transactionName","transactionType","currentUID","uid","logOut","signOut","input","addNewTransaction","isNaN","BackUpState","push","length","user_id","database","ref","data","parseFloat","console","log","remove","window","location","reload","totalMoney","once","snapshot","forEach","ChildSnapshot","val","maxLength","deleteTransaction","Object","keys","map","Main","loading","formSwitcher","action","authListener","onAuthStateChanged","form","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59ac0c26.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyB-BgzVPdVBtrAXQOy84iUaSK1gfNP3r_4\",\n    authDomain: \"budget-52c46.firebaseapp.com\",\n    projectId: \"budget-52c46\",\n    storageBucket: \"budget-52c46.appspot.com\",\n    messagingSenderId: \"865992618244\",\n    appId: \"1:865992618244:web:342556028b22484279a051\",\n    measurementId: \"G-0TFBL50PRL\"\n}\n\nconst fire = firebase.initializeApp(config);\nexport default fire;\n","import React, { Component } from 'react';\nimport fire from '../../config/Fire';\nimport './Login.css'\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        fireErrors: '',\n    }\n\n    login = e => {\n        e.preventDefault();\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).catch((error) => {\n            this.setState({fireErrors: error.message})\n        });\n\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render () {\n\n        let errorNotification = this.state.fireErrors ? \n            (<div className=\"Error\">{this.state.fireErrors}</div>) : null;\n\n\n        return(\n            <>\n                {errorNotification}\n\n                <div class=\"title\">Welcome</div>\n                <div class=\"subtitle\">Log in to your account!</div>\n\n                <form>\n\n                    <input type=\"text\"\n                    className=\"regField\"\n                    placeholder=\"Email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                    name=\"email\"/>\n\n                    <input type=\"password\"\n                    className=\"regField\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    name=\"password\"/>\n                    <input onClick={this.login} type=\"submit\" className=\"submitBtn\" value=\"Log In\"/>\n                </form>\n            </>\n        )\n    }\n}\n\nexport default Login;\n\n","import React, { Component } from 'react';\nimport fire from '../../config/Fire';\nimport './Login.css';\n\n\nclass Register extends Component {\n    state = {\n        email: '',\n        password: '',\n        displayName: '',\n        fireErrors: '',\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    register = e => {\n        e.preventDefault();\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((user) => {\n            var currentUser = fire.auth().currentUser;\n            currentUser.updateProfile({\n                displayName: this.state.displayName\n            })\n        }).catch((error) => {\n            this.setState({fireErrors: error.message})\n        });\n    }\n\n    render () {\n        let errorNotification = this.state.fireErrors ? \n        (<div className=\"Error\">{this.state.fireErrors}</div>) : null;\n        return(\n            <>\n                {errorNotification}\n                <form>\n\n                    <div class=\"title\">Welcome</div>\n                    <div class=\"subtitle\">Let's create your account!</div>\n\n                    <input type=\"text\"\n                    className=\"regField\"\n                    placeholder=\"Your Name\"\n                    onChange={this.handleChange}\n                    value={this.state.displayName}\n                    name=\"displayName\"/>\n\n                    <input type=\"text\"\n                    className=\"regField\"\n                    placeholder=\"Email\"\n                    onChange={this.handleChange}\n                    value={this.state.email}\n                    name=\"email\"/>\n\n                    <input type=\"password\"\n                    className=\"regField\"\n                    placeholder=\"Password\"\n                    onChange={this.handleChange}\n                    value={this.state.password}\n                    name=\"password\"/>\n\n                    <input onClick={this.register} type=\"submit\" className=\"submitBtn\" value=\"Register\"/>\n                </form>\n            </>\n        )\n    }\n}\n\nexport default Register;\n\n","import React from 'react';\n\nconst Transaction = props => {\n    return (\n        \n        <li>\n            \n            <div id={props.id}>{props.name}</div>\n            <div>{props.type === 'income' ? (\n                <>\n                <span className=\"income\"> \n                    +$ {props.price}\n                </span>\n                </>\n            ) : (\n                <>\n                <span className=\"expense\"> \n                    -$ {props.price}\n                </span>\n                </>\n            )}</div>\n        </li>\n    )\n}\n\nexport default Transaction;\n","import React, { Component } from 'react';\nimport fire from '../../config/Fire';\nimport './Tracker.css';\nimport Transaction from './Transaction/Transaction';\n\nclass Tracker extends Component {\n\n    state = {\n        transactions: [],\n        money: 0,\n        transactionName: '',\n        transactionType: '',\n        price: '',\n        currentUID: fire.auth().currentUser.uid,\n    }\n\n    logOut = () => {\n        fire.auth().signOut();\n    }\n\n    handleChange = input => e => {\n        this.setState({\n            [input]: e.target.value !==\"0\" ? e.target.value : \"\"\n        })\n    }\n\n    addNewTransaction = () => {\n        const {\n            transactionName,\n            transactionType,\n            price,\n            currentUID,\n            money\n        } = this.state;\n\n        //validation\n        if(transactionName && transactionType && price && !isNaN(price)) {\n            const BackUpState = this.state.transactions;\n            BackUpState.push({\n                id: BackUpState.length + 1,\n                name: transactionName,\n                type: transactionType,\n                price: price,\n                user_id: currentUID\n            })\n            \n\n            fire.database().ref('Transactions/' + currentUID).push({\n                id: BackUpState.length,\n                name: transactionName,\n                type: transactionType,\n                price: price,\n                user_id: currentUID\n            }).then((data) => {\n                this.setState({\n                    transactions: BackUpState,\n                    money: transactionType === 'income' ? money + parseFloat(price) : money - parseFloat(price),\n                    transactionName: '',\n                    transactionType: '',\n                    price: ''\n                    })\n                }).catch((error) => {\n                    console.log('error', error)\n                });\n        }\n    }\n\n    deleteTransaction(){\n        const { currentUID } = this.state;\n\n        fire.database().ref('Transactions/' + currentUID).remove();\n        window.location.reload(false)\n    }\n\n    componentWillMount() {\n        const {currentUID, money} = this.state;\n        let totalMoney = money;\n        const BackUpState = this.state.transactions;\n        fire.database().ref('Transactions/' + currentUID).once('value',\n        (snapshot) => {\n            snapshot.forEach((ChildSnapshot) => {\n                totalMoney = \n                ChildSnapshot.val().type === 'income' ? \n                parseFloat(ChildSnapshot.val().price) + totalMoney : \n                totalMoney - parseFloat(ChildSnapshot.val().price);\n\n                BackUpState.push({\n                    id: ChildSnapshot.val().id,\n                    name: ChildSnapshot.val().name,\n                    type: ChildSnapshot.val().type,\n                    price: ChildSnapshot.val().price,\n                    user_id: ChildSnapshot.val().user_id,\n                });\n            });\n\n            this.setState({\n                transactions: BackUpState,\n                money: totalMoney,\n            })\n\n        });\n    }\n\n    render() {\n\n        var currentUser = fire.auth().currentUser;\n\n        return(\n            <>\n            <div className=\"welcomeBlock\">\n\n                <span>Hi, {currentUser.displayName}!</span>\n                <button className=\"logOut\" onClick={this.logOut}>Log Out</button>\n            </div>\n            \n           \n\n            <div className=\"budgetBlock\">\n                \n                <div className=\"newTransactionBlock\">\n                     <div className=\"block totalMoney\">\n                    <div>Balance: <span> {this.state.money} $</span></div>\n                </div>\n                    <div className=\"newTransaction block\">\n                        <form>\n                            <input \n                            placeholder=\"Transaction Name\"\n                            type=\"text\"\n                            name=\"transaction\"\n                            maxLength=\"32\"\n                            value={this.state.transactionName}\n                            onChange={this.handleChange('transactionName')}\n                            />\n                            <div className=\"inputGroup\">\n                                <select name=\"type\"\n                                    value={this.state.transactionType}\n                                    onChange={this.handleChange('transactionType')}>\n                                    <option value=\"0\">Type</option>\n                                    <option value=\"income\">Income</option>\n                                    <option value=\"expense\">Expense</option>\n\n                                </select>\n                                <input \n                            placeholder=\"Price\"\n                            type=\"text\"\n                            name=\"price\"\n                            maxLength=\"15\"\n                            value={this.state.price}\n                            onChange={this.handleChange('price')}\n                            />\n                            </div>\n                        </form>\n                        <button \n                                className=\"addTransaction\"\n                                onClick={() => this.addNewTransaction()}>\n                                    + Add Transaction\n                            </button>\n                    </div>\n                </div>\n                <div className=\"lastesTransactions\">\n                <div className=\"lastesText\"><span>Lastes Transactions</span> <button className=\"reset\" onClick={() => this.deleteTransaction()}>Reset</button></div> \n                    <ul>\n                        {\n                            Object.keys(this.state.transactions).map((id) => (\n                                <Transaction key={id} \n                                    type={this.state.transactions[id].type}\n                                    name={this.state.transactions[id].name}\n                                    price={this.state.transactions[id].price}\n                                />\n                            ))\n                        }\n                    </ul>\n                </div>    \n            </div>\n            </>\n        );\n    }\n}\n\nexport default Tracker;\n","import React, { Component } from \"react\";\nimport './Main.css';\nimport fire from '../config/Fire';\nimport Login from './Forms/Login';\nimport Register from './Forms/Register';\nimport Tracker from \"./Tracker/Tracker\";\n\n\n\nexport default class Main extends Component {\n\n    state = {\n        user: 1,\n        loading: true,\n        formSwitcher: false,\n    }\n\n    componentDidMount(){\n        this.authListener();\n    } \n\n    authListener() {\n        fire.auth().onAuthStateChanged((user) => {\n            if(user) {\n                this.setState({user});\n            } else {\n                this.setState({user: null});\n            }\n        });\n\n    }\n\n    formSwitcher = (action) => {\n        this.setState({\n            formSwitcher: action === 'register' ? true : false\n        });\n    }\n\n    render() {\n\n        const form = !this.state.formSwitcher ? <Login /> : <Register />;\n\n        if(this.state.user === 1) {\n            return (\n                <div className=\"mainBlock\">\n                    <div className=\"Spinner\">\n                        <p>Loading...</p>\n                    </div>\n                </div>\n            )\n        }\n        \n        return (\n            <>\n            {!this.state.user ? \n                (<div className=\"mainBlock\">\n                    {form}\n                    {!this.state.formSwitcher ?\n                        (\n                        <span className=\"underLine\">\n                            Don’t have an account? <button \n                            onClick={() => this.formSwitcher(!this.state.formSwitcher ? 'register' : 'login')} \n                            className=\"linkBtn\">Sing Up</button>\n                        </span>) : (\n                            <span className=\"underLine\">\n                            Have an account? <button \n                            onClick={() => this.formSwitcher(!this.state.formSwitcher ? 'register' : 'login')} \n                            className=\"linkBtn\">Sing in</button>\n                            </span>\n                        )\n                    }\n                </div>) : (<Tracker />)\n\n            }\n            </>\n        );\n    }\n}","import './App.css';\nimport Main from './components/Main';\n\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}